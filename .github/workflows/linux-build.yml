name: Linux CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]

    steps:
    # ───────────────────────────────────────────────────────────────────
    - name: Checkout code
      uses: actions/checkout@v4
    # ───────────────────────────────────────────────────────────────────
    - name: Install ${{ matrix.compiler }}
      run: |
        sudo apt-get update
        if [[ "${{ matrix.compiler }}" == "clang" ]]; then
          sudo apt-get install -y clang
        else
          sudo apt-get install -y build-essential   # gcc / g++
        fi
    # ───────────────────────────────────────────────────────────────────
    - name: List C sources (debug aid)
      run: |
        echo "C files found under Split_kMeans/:"
        find Split_kMeans -maxdepth 1 -name '*.c' -print
    # ───────────────────────────────────────────────────────────────────
    - name: Build with ${{ matrix.compiler }}
      env:
        CC: ${{ matrix.compiler }}
      run: |
        set -e
        cd Split_kMeans               # <-- enter source directory
        $CC --version
        SRC_FILES=$(ls *.c)           # all C files in this folder
        $CC -std=c11 -Wall -Wextra -pedantic -O2 -pthread \
            $SRC_FILES -o ../clustering -lm
    # ───────────────────────────────────────────────────────────────────
    - name: Prepare mini dataset
      run: |
        mkdir -p data gt
        cp -R ci-fixtures/data/* ./data/
        cp -R ci-fixtures/gt/*   ./gt/
    # ───────────────────────────────────────────────────────────────────
    - name: Smoke‑test binary
      run: |
        ./clustering || (echo "program exited with non‑zero status"; exit 1)
