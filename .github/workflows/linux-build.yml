name: Linux CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install toolchains and locales
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang locales
        # Optional: ensure Finnish locale exists since code sets it
        sudo locale-gen fi_FI.UTF-8
        echo "LC_ALL=fi_FI.UTF-8" >> "$GITHUB_ENV"
        echo "LANG=fi_FI.UTF-8"   >> "$GITHUB_ENV"

    - name: List C sources (debug aid)
      run: |
        echo "C files in Split_kMeans:"
        find Split_kMeans -maxdepth 1 -name '*.c' -print

    - name: Build with ${{ matrix.compiler }}
      env:
        CC: ${{ matrix.compiler }}
      run: |
        set -euo pipefail
        cd Split_kMeans
        $CC --version
        # Robust glob expansion even if filenames contain spaces
        SRC_FILES=( *.c )
        $CC -std=c11 -Wall -Wextra -pedantic -O2 -pthread \
            -D_POSIX_C_SOURCE=200809L \
            "${SRC_FILES[@]}" -o ../clustering -lm

    - name: Prepare dataset
      run: |
        set -euo pipefail
        mkdir -p data gt centroids
        if [ -d ci-fixtures ]; then
          cp -R ci-fixtures/data/*       ./data/ || true
          cp -R ci-fixtures/gt/*         ./gt/   || true
          cp -R ci-fixtures/centroids/*  ./centroids/ || true
        else
          echo "ci-fixtures missing; creating fallback dataset"
cat > data/sample.txt <<'EOF'
0 0
0 1
1 0
10 10
10 11
11 10
EOF
cat > gt/sample-gt.txt <<'EOF'
0.333333 0.333333
10.333333 10.333333
EOF
          echo 2 > centroids/sample.k
        fi

    - name: Smoke-test
      run: |
        ./clustering