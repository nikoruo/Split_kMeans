name: Linux CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cc: [gcc, clang]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang make

      - name: Debug workspace layout
        run: |
          pwd
          ls -la
          find . -maxdepth 3 -type f -iname 'makefile' -o -iname 'gnumakefile' -o -iname 'GNUmakefile'

      - name: Build with ${{ matrix.cc }}
        env:
          CC: ${{ matrix.cc }}
        run: |
          make -f Makefile -C "${GITHUB_WORKSPACE}" clean
          make -f Makefile -C "${GITHUB_WORKSPACE}" CC="${CC}" CFLAGS="-O3 -std=c11 -Wall -Wextra -Wpedantic -Werror"

      - name: Prepare mini dataset (optional)
        if: ${{ hashFiles('ci-fixtures/**') != '' }}
        run: |
          mkdir -p data gt centroids
          cp -R ci-fixtures/data/* ./data/ || true
          cp -R ci-fixtures/gt/*   ./gt/   || true
          cp -R ci-fixtures/centroids/* ./centroids/ || true

      - name: Smoke-test binary
        run: |
          ./split_kmeans || (echo "program exited with non-zero status"; exit 1)